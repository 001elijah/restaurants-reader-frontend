{"version":3,"file":"static/js/345.9f0751a3.chunk.js","mappings":"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","sources":["webpack://eliftech_test/./src/components/OrderForm/OrderForm.module.css?3a20","components/OrderForm/OrderForm.jsx","pages/ShoppingCartPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Button\":\"OrderForm_Button__uWy3i\",\"OrderList\":\"OrderForm_OrderList__Tuyve\",\"OrderCard\":\"OrderForm_OrderCard__VXc3a\",\"FormWrapper\":\"OrderForm_FormWrapper__gmNpB\",\"OrderPic\":\"OrderForm_OrderPic__i8fwB\",\"FlexWrapper\":\"OrderForm_FlexWrapper__2pnRg\",\"TextWrapper\":\"OrderForm_TextWrapper__WTvDJ\",\"RemoveButton\":\"OrderForm_RemoveButton__QQ-ix\",\"SubmitButton\":\"OrderForm_SubmitButton__F7CPa\",\"Amount\":\"OrderForm_Amount__dBDUa\",\"Total\":\"OrderForm_Total__p1v8B\"};","import { useState } from \"react\";\n\nimport css from './OrderForm.module.css'\nimport { ToastContainer } from \"react-toastify\";\n\nexport const OrderForm = ({ handleSubmitOrder, cart, setCart, handleAmountChange }) => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [number, setNumber] = useState('');\n    const [address, setAddress] = useState('');\n    const handleRemove = (productId) => {\n        setCart(cart => cart.filter(item => item._id !== productId));\n    };\n\n    const price = cart.reduce((total, item) => total + item.amount * item.price, 0);\n\n    const handleChange = evt => {\n        evt.target.name === 'name' && setName(evt.target.value);\n        evt.target.name === 'email' && setEmail(evt.target.value);\n        evt.target.name === 'number' && setNumber(evt.target.value);\n        evt.target.name === 'address' && setAddress(evt.target.value);\n    };\n\n    const reset = () => {\n        setName('');\n        setEmail('');\n        setNumber('');\n        setAddress('');\n    };\n\n    const handleSubmit = evt => {\n        evt.preventDefault();\n        handleSubmitOrder({ name, email, phone: number, address, order: cart, total: price });\n        // onSubmitProp({name, email, number, address, amount, id: shortid.generate()});\n        reset();\n        setCart([]);\n    };\n\n    return (\n        <>\n            <ToastContainer />\n            {cart.length > 0 &&\n                <form onSubmit={handleSubmit}>\n                <div style={{padding: '0 35px', margin: \"0 auto\"}}>\n                    <div className={css.FormWrapper}>\n                        <ul>\n                            <li>\n                                <label htmlFor=\"\">\n                                    Name:<br />\n                                    <input\n                                        type=\"text\"\n                                        name=\"name\"\n                                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                                        title=\"Name may contain only letters, apostrophe, dash and spacecs For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                                        required\n                                        value={name}\n                                        onChange={handleChange}\n                                    />\n                                </label><br /><br />\n                            </li>\n                            <li>\n                                <label htmlFor=\"\">\n                                    Email:<br />\n                                    <input\n                                        type=\"text\"\n                                        name=\"email\"\n                                        // pattern=\"/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\"\n                                        title=\"Email\"\n                                        required\n                                        value={email}\n                                        onChange={handleChange}\n                                    />\n                                </label><br /><br />\n                            </li>\n                            <li>\n                                <label htmlFor=\"\">\n                                    Phone:<br />\n                                    <input\n                                        type=\"tel\"\n                                        name=\"number\"\n                                        // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                                        required\n                                        value={number}\n                                        onChange={handleChange}\n                                    />\n                                </label><br /><br />\n                            </li>\n                            <li>\n                                <label htmlFor=\"\">\n                                    Address:<br />\n                                    <input\n                                        type=\"text\"\n                                        name=\"address\"\n                                        // pattern=\"\\d{1,5}\\s\\w.\\s(\\b\\w*\\b\\s){1,2}\\w*\\.\"\n                                        title=\"Address\"\n                                        required\n                                        value={address}\n                                        onChange={handleChange}\n                                    />\n                                </label><br /><br />\n                            </li>\n                        </ul>\n                        <ul className={css.OrderList}>\n                            {cart.map(item =>\n                                <li className={css.OrderCard} key={item._id}>\n                                    <img className={css.OrderPic} src={item.photo} alt=\"\" />\n                                    <div className={css.TextWrapper}>\n                                        <p>{item.title}</p>\n                                        <p>Price: {item.price}</p>\n                                        <div style={{ display: \"flex\", justifyContent: \"center\", marginBottom: \"10px\" }}>\n                                                    <button className={css.Button} type=\"button\" onClick={() => handleAmountChange(item._id, 1)}>+</button>\n                                                    <p className={css.Amount}>{item.amount}</p>\n                                                    <button className={css.Button} type=\"button\" onClick={() => handleAmountChange(item._id, -1)}>-</button>\n                                                </div>\n                                            <button className={css.RemoveButton} onClick={() => handleRemove(item._id)}>Remove</button>\n                                    </div>\n                                </li>)}\n                        </ul>\n                    </div>\n                    <div className={css.FlexWrapper}>\n                        <p className={css.Total}>Total price: {price}</p>\n                        <button className={css.SubmitButton} type=\"submit\">Submit order</button>\n                    </div>\n                </div>\n            </form>}\n            {cart.length === 0 && <p>You cart is empty! Go shopping first</p>}\n        </>\n    );\n};","import { OrderForm } from \"../components/OrderForm/OrderForm\"\n\nconst ShoppingCartPage = ({cart, setCart, handleAmountChange, handleSubmitOrder}) => {\n    return (\n        <>\n            <OrderForm cart={cart} handleAmountChange={handleAmountChange} setCart={setCart} handleSubmitOrder={handleSubmitOrder} />\n        </>\n    )\n}\n\nexport default ShoppingCartPage;"],"names":["OrderForm","_ref","handleSubmitOrder","cart","setCart","handleAmountChange","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","number","setNumber","_useState7","_useState8","address","setAddress","price","reduce","total","item","amount","handleChange","evt","target","value","_jsxs","_Fragment","children","_jsx","ToastContainer","length","onSubmit","preventDefault","phone","order","style","padding","margin","className","css","htmlFor","type","pattern","title","required","onChange","map","src","photo","alt","display","justifyContent","marginBottom","onClick","_id","productId","filter"],"sourceRoot":""}